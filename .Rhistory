library(shiny); runApp('Desktop/Code/R/Shiny/prueba_shinyapp.R')
version
shiny::runApp('Desktop/Code/R/Shiny/Metrics_app/V2')
runApp('Desktop/Code/R/Shiny/Metrics_app/marketplace')
runApp('Desktop/Code/R/Shiny/Metrics_app/marketplace')
shiny::runApp('Desktop/Code/R/Shiny/Metrics_app/marketplace')
runApp('Desktop/Code/R/Shiny/Metrics_app/marketplace')
round_df <- function(df, digits) {
nums <- vapply(df, is.numeric, FUN.VALUE = logical(1))
df[,nums] <- round(df[,nums], digits = digits)
return(df)
}
data+
)
data
data = round_df(data)
data
data <- round_df(data, 6)
data
runApp('Desktop/Code/R/Shiny/Metrics_app/marketplace')
runApp('Desktop/Code/R/Shiny/Metrics_app/marketplace')
runApp('Desktop/Code/R/Shiny/Metrics_app/marketplace')
runApp('Desktop/Code/R/Shiny/Metrics_app/marketplace')
runApp('Desktop/Code/R/Shiny/Metrics_app/marketplace')
runApp('Desktop/Code/R/Shiny/Metrics_app/marketplace')
runApp('Desktop/Code/R/Shiny/Metrics_app/marketplace')
runApp('Desktop/Code/R/Shiny/Metrics_app/marketplace')
runApp('Desktop/Code/R/Shiny/Metrics_app/marketplace')
runApp('Desktop/Code/R/Shiny/Metrics_app/marketplace')
runApp('Desktop/Code/R/Shiny/Metrics_app/marketplace')
runApp('Desktop/Code/R/Shiny/Metrics_app/marketplace')
runApp('Desktop/Code/R/Shiny/Metrics_app/marketplace')
runApp('Desktop/Code/R/Shiny/Metrics_app/marketplace')
runApp('Desktop/Code/R/Shiny/Metrics_app/marketplace')
runApp('Desktop/Code/R/Shiny/Metrics_app/marketplace')
version
library(arules)
install.packages("arules")
library(arules)
library(aod)
library(ggplot2)
library(data.table)
library(ROCR)
library(caTools)
library(corrplot)
library(ggfortify)
library(nortest)
library(forecast)
library(caret)
setwd("/Users/felix/Desktop/Code/Postgrau/Capstone_propio/TAOPYPY/")
source("./R/utility_functions.R")
# Read the data and grab the interesting columns
data <- read.csv("./tweets_public_spanish.csv", encoding='utf-16', index_col='tweet_id', sep=',')
names(data)
# Read the data and grab the interesting columns
data <- read.csv("./tweets_public_spanish.csv", encoding='utf-16', sep=',')
data
# Read the data and grab the interesting columns
data <- fread("./tweets_public_spanish.csv", fileEncoding="UTF-16LE", sep=',')
data <- read.csv("./tweets_public_spanish.csv", fileEncoding="UTF-16", sep = ',')
data
names(data)
data$airline_sentiment
data$airline_sentiment <- as.factor(data$airline_sentiment)
names(data)
data <- data[c("airline_sentiment", "text", "tweet_id")]
summary(data)
View(data)
library(dplyr)
library(janeaustenr)
library(tidytext)
setwd("/Users/felix/Desktop/Code/Postgrau/Capstone_propio/TAOPYPY/")
library(dplyr)
library(tidytext)
install.packages("tidytext")
data <- read.csv("./converted_data.csv", sep = ';')
names(data)
data$label <- as.factor(data$label)
View(data)
set.seed(101)
sample <- sample.split(data$label, SplitRatio = 0.75)
# Training Data
train = subset(data, sample == TRUE)
# Testing Data
test = subset(data, sample == FALSE)
model <- glm(label ~ ., data = train, family = 'binomial')
summary(model)
model <- optimize_model(model, data)
source("./R/utility_functions.R")
model <- optimize_model(model, data)
model
summary(model)
preds <- predict(model, test)
preds
preds <- predict(model, test, type = "response")
preds
summary(preds)
